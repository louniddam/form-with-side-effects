{"ast":null,"code":"var _jsxFileName = \"/Users/niddam/Desktop/h2s-work/udemy/side-effect-context/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AuthContext from './components/store/auth-context';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem('logged', '1');\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('logged');\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const logged = localStorage.getItem('logged');\n\n    if (logged === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/niddam/Desktop/h2s-work/udemy/side-effect-context/src/App.js"],"names":["React","useEffect","useState","AuthContext","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","logoutHandler","removeItem","logged","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,GAA/B;AACD,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,QAAxB;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,MAAM,GAAGJ,YAAY,CAACK,OAAb,CAAqB,QAArB,CAAf;;AAEA,QAAGD,MAAM,KAAK,GAAd,EAAmB;AACjBR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAED,UAA7B;AAAyC,MAAA,QAAQ,EAAEO;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACP,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGF,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GAhCQR,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AuthContext from './components/store/auth-context'\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem('logged', '1')\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('logged')\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const logged = localStorage.getItem('logged')\n\n    if(logged === '1') {\n      setIsLoggedIn(true);\n    }\n  }, [])\n\n  return (\n      <AuthContext.Provider>\n        <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}